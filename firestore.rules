rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTeacher() {
      return isAuthenticated() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    function isStudent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    // Users collection - Teachers can read all users
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        isTeacher() || 
        isAdmin()
      );
      allow write: if isAdmin();
    }

    // Classes collection
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher() || isAdmin();
      
      // Allow students to read classes they're enrolled in
      allow read: if isStudent() && (
        resource.data.enrolledStudents.hasAny([request.auth.uid]) ||
        request.auth.token.classes.hasAny([classId])
      );
    }

    // Students collection - Teachers can read all students
    match /students/{studentId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == studentId || 
        isTeacher() || 
        isAdmin()
      );
      allow write: if isTeacher() || isAdmin();
    }

    // Teachers collection
    match /teachers/{teacherId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Courses collection
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher() || isAdmin();
    }

    // Assignments collection
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher() || isAdmin();
    }

    // Grades collection
    match /grades/{gradeId} {
      allow read: if isAuthenticated() && (
        resource.data.studentId == request.auth.uid ||
        isTeacher() ||
        isAdmin()
      );
      allow write: if isTeacher() || isAdmin();
    }

    // Student Answers collection
    match /student-answers/{answerId} {
      allow read: if isAuthenticated() && (
        // Students can read their own answers
        (isStudent() && resource.data.studentId == request.auth.uid) ||
        // Teachers can read all answers in their classes
        (isTeacher() && resource.data.classId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classes)
      );
      allow write: if isAuthenticated() && (
        // Students can write their own answers
        (isStudent() && request.resource.data.studentId == request.auth.uid) ||
        // Teachers can write answers for grading
        (isTeacher() && request.resource.data.classId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classes)
      );
    }

    // Student Progress collection
    match /student-progress/{progressId} {
      allow read: if isAuthenticated() && (
        // Students can read their own progress
        (isStudent() && resource.data.studentId == request.auth.uid) ||
        // Teachers can read all progress in their classes
        (isTeacher() && resource.data.classId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classes)
      );
      allow write: if isAuthenticated() && (
        // Students can write their own progress
        (isStudent() && request.resource.data.studentId == request.auth.uid) ||
        // Teachers can write progress for grading
        (isTeacher() && request.resource.data.classId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classes)
      );
    }

    // Published Assignments collection
    match /published_assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher() || isAdmin();
    }

    // Published Curricula collection
    match /published_curricula/{curriculumId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher() || isAdmin();
    }
  }
} 